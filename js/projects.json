[{
   "id": "customization",
   "title": "<strong>Direct Customization:</strong><br> Affordances and Preview for Personalization",
   "pictures": ["img/customization/customization_0.png", "img/customization/customization_1.png", "img/customization/customization_2.png", "img/customization/customization_3.png", "img/customization/customization_4.png", "img/customization/customization_5.png"],
   "icon": "img/customization/customization-icon.png",
   "detailsVisible": false,
   "pictureVisible":false,
   "links": [{
      "text": "(work in progress)",
      "href": ""
   }],
   "description": "Customization panels are the most common customization mechanism in today's software. Often implemented as dialog boxes, they let users modify their software via a set of predefined customization options. However, these panels are how developers think about customization: changing the values of some obscure parameters in a config file. We propose to take the users' side on customization, by embedding it as much as possible in the interface of the app, which they are already familiar with. We are exploring how to add affordances, preview and undo of the customization options available, to create a more direct form of customization.",
   "tools": "jQuery, Angular.js",
   "tags": ["Interaction Design", "Visual Design", "Web", "User Research"]
}, {
   "id": "paperquest",
   "title": "<strong>PaperQuest:</strong><br> A Visualization Tool to Support Literature Review",
   "pictures": ["img/paperquest/paperquest_0.png","img/paperquest/paperquest_1.png","img/paperquest/paperquest_2.png"],
   "icon": "img/paperquest/paperquest-icon.png",
   "detailsVisible": false,
   "pictureVisible":false,
   "links": [{
      "text": "demo",
      "href": "//www.cs.ubc.ca/~aponsard/paperquest"
   }, {
      "text": "paper",
      "href": "res/PaperQuest.pdf"
   }],
   "description": "The literature review is a key component of academic research, that allows researchers to build upon each other’s work. Yet it requires researchers to browse hundreds of publications to find the ones related to their own work. While modern search engines enable fast access to publications, there is a lack of support for filtering out the vast majority of papers that are irrelevant to the current research focus. We present PaperQuest, a visualization tool that supports efficient decisions, by only displaying the information useful at a given step of the process. We propose a relevance algorithm to find and sort papers that are likely to be valuable to users, based on the papers they have already expressed interest in, as well as the number of citations. The current implementation uses papers from the CHI and UIST conferences, and citation counts from Google Scholar, but is easily extensible to other domains of the literature.",
   "tools": "D3.js",
   "tags": ["Interaction Design", "Visual Design", "Web", "User Research"]
}, {
   "id": "twistAndPulse",
   "title": "<strong>Twist and Pulse:</strong> Ephemeral Adaptation to improve Icon Selection on Smartphones <em> (Graphics Interface 2015) </em>",
   "pictures": ["img/twistAndPulse/twistAndPulse_0.png","img/twistAndPulse/twistAndPulse_1.png", "img/twistAndPulse/twistAndPulse_2.png"],
   "icon": "img/twistAndPulse/twistAndPulse-icon.png",
   "detailsVisible": false,
   "pictureVisible":false,
   "links": [{
      "text": "video",
      "href": "//youtu.be/EhsgFFhHUuA"
   }, {
      "text": "paper",
      "href": "res/TwistAndPulse-GI2015.pdf"
   }],
   "description": "The concept of ephemeral adaptation was introduced to reduce visual search time in GUI menus, while preserving spatial consistency and minimizing distraction. We extend this concept to the visual search of app icons on smartphones in order to speed up launching apps from a homescreen. We created ephemeral highlighting effects based on preattentive visual properties including size, orientation, color, opacity and blur. A controlled experiment showed that Twist (icon rotates back and forth) and Pulse (icon grows and shrinks) improve search time performance by 8-10% over a control condition with no highlighting.",
   "tools": "Android",
   "tags": ["Interaction Design", "Visual Design", "Mobile", "User Research"]
}, {
   "id": "calendarTodolists",
   "title": "Integrating calendar and to-do lists",
   "pictures": ["img/calendarTodolists/calendarTodolists_0.png", "img/calendarTodolists/calendarTodolists_1.png", "img/calendarTodolists/calendarTodolists_2.png", "img/calendarTodolists/calendarTodolists_3.png", "img/calendarTodolists/calendarTodolists_4.png", "img/calendarTodolists/calendarTodolists_5.png"],
   "icon": "img/calendarTodolists/calendarTodolists-icon.png",
   "detailsVisible": false,
   "pictureVisible":false,
   "links": [{
      "text": "demo",
      "href": "//www.cs.ubc.ca/~aponsard/hci-med-fi-prototype"
   }, {
      "text": "paper",
      "href": "res/NurseryWeb-stage4.pdf"

   }],
   "description": "The goal of this team project was to tackle what we considered a major issue in Task Management: the lack of support for time-sensitive deadlines. On the one hand, calendars are time-centric tools, appropriate for keeping track of events, but they are not great for planning for deadlines. On the other hand, todo lists are task-centric tools, excellent for keeping track of tasks and subtasks; but it is hard to visualize time from a text-only format. Our proposed solution is to combine the strength of both types of tools by tightly coupling them.",
   "tools": "Balsamiq, jQuery, Ember.js",
   "tags": ["Interaction Design", "Visual Design", "Web", "User Research"]
}, {
   "id": "portfolio",
   "title": "Online portfolio",
   "pictures": ["img/portfolio/portfolio_0.png", "img/portfolio/portfolio_1.png"],
   "icon": "img/portfolio/portfolio-icon.png",
   "detailsVisible": false,
   "pictureVisible":false,
   "links": [{
      "text": "home",
      "href": "#!/"
   }],
   "description": "Since I was completely free for this project, I wanted to try to design something very minimalistic. Both the visual style and the information architecture are simple: one page about me, one page for my projects. My paraph on the landing screen is the key to the entire website: it is a distinctive personal element; it provides navigation to the different pages; and its circular shape is used consistently troughout the website. The vertical ligne shared by the A and the P can be found in each picture, to reinforce the visual structure. Using the circle shape consistently creates a lot of visual constraints across the website, which makes each page rather tricky to design—especially since the visual constraints must be satisfied for each screen size.",
   "tools": "Angular.js, D3.js, Bootstrap",
   "tags": ["Interaction Design", "Visual Design", "Web", "Mobile"]
}, {
   "id": "boa",
   "title": "Multi-scale video exploration techniques",
   "pictures": ["img/boa/boa_0.png"],
   "icon": "img/boa/boa-icon.png",
   "detailsVisible": false,
   "pictureVisible":false,
   "links": [{
      "text": "(demo coming soon)",
      "href": ""
   }],
   "description": "I've always been intrigued by that simple question: 'Why is it still so cumbersome to browse and edit videos compared to text files?'. For instance, finding a particular scene in a movie is much more difficult than finding a sentence in a text. During an internship at INRIA, I had access to a wall-sized display made of 32 high resolution monitors. It allowed me to 'lay out time in space', i.e. to project the temporal dimension of the video on the two spatial dimensions of this giant screen. I built three prototypes to try out different interaction techniques, such as temporal zoom based on the distance to the screen. One of my design goals was to preserve as much as possible the continuity of the video while projecting it, which led to the use of a 'snake' projection.",
   "tools": "Node.js, jQuery, ffmpeg, HTML5 video player",
   "tags": ["Interaction Design", "Web"]
}, {
   "id": "geppm",
   "title": "Event scheduling website for an equal opportunity program",
   "pictures": ["img/geppm/geppm_0.png"],
   "icon": "img/geppm/geppm-icon.png",
   "detailsVisible": false,
   "pictureVisible":false,
   "links": [{
      "text": "demo",
      "href": "//www.cs.ubc.ca/~aponsard/geppm"
   }],
   "description": "A friend and I built this website for GEPPM, an equal opportunity program I was participating in at Ecole polytechnique. We had two types of users: regular tutors who needed to know where and when to meet their tutees, depending on the group and grade; and admins who assign tutors to groups and schedule events for all the groups. My friend set up the database and the events management on the back end, while I built the front end in AJAX, designed the appearance of the website and handled the account management features. You can try the website with the login a@a.com and the password 'a'.",
   "tools": "PHP, MySQL, AJAX",
   "tags": ["Interaction Design","Visual Design", "Web"]
}, {
   "id": "angularTodos",
   "title": "Simple task manager in Angular.js",
   "pictures": ["img/angularTodos/angularTodos_0.png"],
   "icon": "img/angularTodos/angularTodos-icon.png",
   "detailsVisible": false,
   "pictureVisible":false,
   "links": [{
      "text": "demo",
      "href": "//www.cs.ubc.ca/~aponsard/personal-task-manager"
   }],
   "description": "I built this simple task manager to learn Angular.js, in particular its templating and filtering features.",
   "tools": "Angular.js",
   "tags": ["Web"]
}, {
   "id": "drone",
   "title": "Image processing for drone stabilization",
   "pictures": ["img/drone/drone_0.png"],
   "icon": "img/drone/drone-icon.png",
   "detailsVisible": false,
   "pictureVisible":false,
   "links": [{
      "text": "video_flight",
      "href": "//youtu.be/onzO0s7Fn6c"
   },{
      "text": "video_algorithm",
      "href": "//youtu.be/WZTOihh9bhI"
   }],
   "description": "In this team project, we worked on a small quadcopter drone, built the year before by another team. It could fly on its own, automatically controlled by an Inertial Measurement Unit; but an IMU is not accurate enough to prevent drifting. To measure the drone's horizontal speed accurately and frequently, our approach was to put a camera under the drone, facing the ground, and use image processing algorithms to estimate the motion relative to the ground. I was in charge of developing the image processing part. With the help of a computer vision expert, I selected the FAST algorithm to detect salient features in each frame of the video stream, then match these features across frames based on a similarity metric. The homographic matrix between two consecutive frames is then computed from these individual motion vectors via a RANSAC voting scheme. Two components of this matrix are the horizontal translation of the camera between two frames.",
   "tools": "C++, OpenCV",
   "tags": ["Other"]
}, {
   "id": "sasuke",
   "title": "Platform game: Path of a Ninja",
   "pictures": ["img/sasuke/sasuke_0.png"],
   "icon": "img/sasuke/sasuke-icon.png",
   "detailsVisible": false,
   "pictureVisible":false,
   "links": [{
      "text": ".exe",
      "href": "res/sasuke.exe"
   }],
   "description": "A platform game I developed a long time ago, in which you control a ninja who jumps from building to building and throws shurikens. It was my first encounter with concepts like Object-Oriented Programming and the event loop. But the most difficult part was to handle gravity and collisions, and change the sprites appropriately—especially since the images I was using had a little bit of depth (2.5D).",
   "tools": "Game Maker Studio",
   "tags": ["Other"]
}, {
   "id": "avion",
   "title": "Converting my RC car into an RC plane",
   "pictures": ["img/avion/avion_0.png"],
   "icon": "img/avion/avion-icon.png",
   "detailsVisible": false,
   "pictureVisible":false,
   "links": [{
      "text": "video",
      "href": "//youtu.be/-y7MyrMMm-k"
   }],
   "description": "I had a neat RC car as a teenager, but I grew tired of it. So I decided to turn it into a plane. I adapted some plans from an RC magazine to accommodate the size of the car's engine and the weight of the battery pack, and built the structure of the plane in balsa and a special type of polystyrene. The tricky thing was that a plane has at least three degrees of freedom, but my RC controller had only two channels, so I had to use the engine for both speed and altitude. It did fly (multiple times!), but I quickly realized that flying a plane is much, much harder than driving a car!",
   "tools": "saw, glue, scalpel, soldering iron",
   "tags": ["Other"]
}]
